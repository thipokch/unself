name: Deploy

on:
  workflow_call:
    inputs:
      env:
        description: "Environment to run the workflow for."
        required: true
        type: string
      build_num:
        description: "Build number to use for this build."
        required: true
        type: string
      releases_created:
        description: "Whether releases have been created."
        required: false
        type: boolean
        default: false
      changelog:
        description: "Changelog to use for this build."
        required: false
        type: string
        default: ""
jobs:
  deploy:
    name: "Deploying ${{ matrix.target }} for ${{ inputs.env }} #${{ inputs.build_num }}"

    permissions:
      contents: write

    strategy:
      fail-fast: false
      matrix:
        include:
          # - os: macos-12
          #   target: iOS
          #   deploy-command: ios

          # - os: ubuntu-22.04
          #   target: Android
          #   deploy-command: and
          #   build-dir: /build/app/outputs/apk/

          - os: ubuntu-22.04
            target: Web
            deploy-command: web

    if: ${{ inputs.releases_created || inputs.env == 'dev' }}
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checking out repo.
        uses: actions/checkout@v3
        with:
          fetch-depth: 0 # Deep Fetch
        #   ref: ${{ inputs.env }}

      - name: Setup Flutter SDK
        uses: subosito/flutter-action@v2
        with:
          channel: "stable"
          cache: true

      - name: Setup ruby
        if: ${{ startsWith(runner.os, 'macos') }}
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: "3.0" # Not needed with a .ruby-version file
          bundler-cache: true # runs 'bundle install' and caches installed gems automatically
          working-directory: ${{ github.workspace }}/packages/app/ios

      - name: Bootstraping Melos
        env:
          SECRETS_GITHUB_TOKEN: ${{ secrets.SECRETS_GITHUB_TOKEN }}
          SECRETS_GITHUB_PATH: ${{ secrets.SECRETS_GITHUB_PATH }}
          SECRETS_PASSWORD: ${{ secrets.SECRETS_PASSWORD }}
        run: dart pub global activate melos && melos setup:ci

      - name: "Download Artifacts for ${{ matrix.target }} #${{ inputs.build_num }}"
        uses: actions/download-artifact@v3
        with:
          name: ${{ matrix.target }}
      
      - name: Cache .dart_tool
        uses: actions/cache@v3
        id: cache_dart_tool
        with:
          path: "**/.dart_tool/"
          key: ${{ github.ref }}-${{ runner.os }}

      # - name: "Deploying ${{ matrix.target }} #${{ inputs.build_num }}"
      #   if: ${{ matrix.deploy-command != 'web' }}
      #   env:
      #     ASC_KEY_ID: ${{ secrets.ASC_KEY_ID }}
      #     ASC_ISSUER_ID: ${{ secrets.ASC_ISSUER_ID }}
      #     ASC_KEY_CONTENT: ${{ secrets.ASC_KEY_CONTENT }}
      #     CHANGELOG: ${{ inputs.changelog }}
      #   run: melos deploy:${{ matrix.deploy-command }}:${{ inputs.env }}

      # Popular action to deploy to GitHub Pages:
      # Docs: https://github.com/peaceiris/actions-gh-pages#%EF%B8%8F-docusaurus

      - name: Deploy to GitHub Pages
        uses: peaceiris/actions-gh-pages@v3
        if: ${{ matrix.deploy-command == 'web' }}
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          # Build output to publish to the `gh-pages` branch:
          publish_dir: ./app/unself/build/web
          # The following lines assign commit authorship to the official
          # GH-Actions bot for deploys to `gh-pages` branch:
          # https://github.com/actions/checkout/issues/13#issuecomment-724415212
          # The GH actions bot is used by default if you didn't specify the two fields.
          # You can swap them out with your own user credentials.
          user_name: github-actions[bot]
          user_email: 41898282+github-actions[bot]@users.noreply.github.com
          publish_branch: cf-pages
